// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_inventorymisdss.Repository;

#nullable disable

namespace api_inventorymisdss.Repository.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api_inventorymisdss.Domain.Incoming", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateTimeRestock")
                        .HasColumnType("datetime2");

                    b.Property<int>("IncomingProductId")
                        .HasColumnType("int");

                    b.Property<int>("IncomingStockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductListId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductListId");

                    b.ToTable("Incomings");
                });

            modelBuilder.Entity("api_inventorymisdss.Domain.Outgoing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateTimeOutgoing")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("OutgoingProductId")
                        .HasColumnType("int");

                    b.Property<long>("ProductListId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductListId");

                    b.ToTable("Outgoings");
                });

            modelBuilder.Entity("api_inventorymisdss.Domain.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BarcodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Measurement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockCount")
                        .HasColumnType("int");

                    b.Property<string>("VariantName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("api_inventorymisdss.Domain.ProductList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IncomingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OutgoingId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IncomingId");

                    b.HasIndex("OutgoingId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductList");
                });

            modelBuilder.Entity("api_inventorymisdss.Domain.Incoming", b =>
                {
                    b.HasOne("api_inventorymisdss.Domain.ProductList", "ProductList")
                        .WithMany()
                        .HasForeignKey("ProductListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("api_inventorymisdss.Domain.Outgoing", b =>
                {
                    b.HasOne("api_inventorymisdss.Domain.ProductList", "ProductList")
                        .WithMany()
                        .HasForeignKey("ProductListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("api_inventorymisdss.Domain.ProductList", b =>
                {
                    b.HasOne("api_inventorymisdss.Domain.Incoming", null)
                        .WithMany("ProductName")
                        .HasForeignKey("IncomingId");

                    b.HasOne("api_inventorymisdss.Domain.Outgoing", null)
                        .WithMany("ProductName")
                        .HasForeignKey("OutgoingId");

                    b.HasOne("api_inventorymisdss.Domain.Product", "Product")
                        .WithOne("ProductList")
                        .HasForeignKey("api_inventorymisdss.Domain.ProductList", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("api_inventorymisdss.Domain.Incoming", b =>
                {
                    b.Navigation("ProductName");
                });

            modelBuilder.Entity("api_inventorymisdss.Domain.Outgoing", b =>
                {
                    b.Navigation("ProductName");
                });

            modelBuilder.Entity("api_inventorymisdss.Domain.Product", b =>
                {
                    b.Navigation("ProductList")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
